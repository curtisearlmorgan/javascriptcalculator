class App extends React.Component {
  constructor(props){
    super(props)
    this.state = {
      currentNum: "0",
      operator: false,
      decimalVar: false
   }
  }
  
  handleClick = (buttonName) => {
    let currentNum = this.state.currentNum
    let operator = this.state.operator
    switch(true){
      case   buttonName === "0" ||
             buttonName === "1" ||
             buttonName === "2" ||
             buttonName === "3" ||
             buttonName === "4" ||
             buttonName === "5" ||
             buttonName === "6" ||
             buttonName === "7" ||
             buttonName === "8" ||
             buttonName === "9" :
        if(this.state.currentNum !== "0"){
        currentNum += buttonName
        operator = false
        }else{
        currentNum = buttonName
        }
      break
      case   buttonName === "+" ||
             buttonName === "-" ||
             buttonName === "*" ||
             buttonName === "/" :
        if(!this.state.operator){
          currentNum += buttonName
          operator = true
          this.setState({decimalVar:false})
        }else{
          const newNumber = currentNum.slice(0,currentNum.length-1)
          currentNum = newNumber 
          currentNum += buttonName
        }
      break
      case buttonName === "C":
       currentNum = "0"
       operator = false
       this.setState({decimalVar:false})
      break
      case buttonName === "=":
       currentNum = eval(currentNum)
       operator = false
       this.setState({decimalVar:true})
      break
      case buttonName === ".":
       if(!this.state.decimalVar){
         currentNum += "."
         this.setState({decimalVar:true})
       }
    }
    this.setState({operator})
    this.setState({currentNum})
  }
  
  render(){
    return(
    <div>
      <div id="calcContainer">
      <Screen id = "display" currentNum={this.state.currentNum} />
      <Button id="clear" name="C" handleClick={this.handleClick} />
      <Button id="divide" name="/" handleClick={this.handleClick} />
      <Button id="multiply" name="*" handleClick={this.handleClick} />
      <Button id="add" name="+" handleClick={this.handleClick} />
      <Button id="nine" name="9" handleClick={this.handleClick} />
      <Button id="eight" name="8" handleClick={this.handleClick} />
      <Button id="seven" name="7" handleClick={this.handleClick} />
      <Button id="subtract" name="-" handleClick={this.handleClick} />
      <Button id="six" name="6" handleClick={this.handleClick} />
      <Button id="five" name="5" handleClick={this.handleClick} />
      <Button id="four" name="4" handleClick={this.handleClick} />
      <Button id="decimal" name="." handleClick={this.handleClick} />
      <Button id="three" name="3" handleClick={this.handleClick} />
      <Button id="two" name="2" handleClick={this.handleClick} />
      <Button id="one" name="1" handleClick={this.handleClick} />
       <Button id="zero" name="0" handleClick={this.handleClick} />
       <Button id="equals" name="=" handleClick={this.handleClick} />
        </div>  
    </div>
    );
  }
}

class Screen extends React.Component {
  render(){
    return(
    <div id={this.props.id}>
    {this.props.currentNum}
    </div> 
    )
  }
}

class Button extends React.Component {
  runParentHandleClick = () => {
  this.props.handleClick(this.props.name)
  }
  render(){
    return(
    <button id={this.props.id} onClick={this.runParentHandleClick}>{this.props.name}</button>
    )
  }
}

ReactDOM.render(<App />, document.getElementById("root"))